/**
 * Created by johnm on 2016-12-31.
 */

/*      73167176531330624919225119674426574742355349194934
        96983520312774506326239578318016984801869478851843
        85861560789112949495459501737958331952853208805511
        12540698747158523863050715693290963295227443043557
        66896648950445244523161731856403098711121722383113
        62229893423380308135336276614282806444486645238749
        30358907296290491560440772390713810515859307960866
        70172427121883998797908792274921901699720888093776
        65727333001053367881220235421809751254540594752243
        52584907711670556013604839586446706324415722155397
        53697817977846174064955149290862569321978468622482
        83972241375657056057490261407972968652414535100474
        82166370484403199890008895243450658541227588666881
        16427171479924442928230863465674813919123162824586
        17866458359124566529476545682848912883142607690042
        24219022671055626321111109370544217506941658960408
        07198403850962455444362981230987879927244284909188
        84580156166097919133875499200524063689912560717606
        05886116467109405077541002256983155200055935729725
        71636269561882670428252483600823257530420752963450*/


public class Problem8 {
    public static void main(String[] args){
        int[] nArr = makeArr();
        int[] resultAr = makeResultAr(nArr);
        comparing(resultAr);
    }

    //1000자리 숫자를 String에 집어넣고(웹에서 긁어온거니까 String) 숫자 배열로 변경하기
    static int[] makeArr(){
        String sArr = new String("73167176531330624919225119674426574742355349194934"+
                                        "96983520312774506326239578318016984801869478851843"+
                                        "85861560789112949495459501737958331952853208805511"+
                                        "12540698747158523863050715693290963295227443043557"+
                                        "66896648950445244523161731856403098711121722383113"+
                                        "62229893423380308135336276614282806444486645238749"+
                                        "30358907296290491560440772390713810515859307960866"+
                                        "70172427121883998797908792274921901699720888093776"+
                                        "65727333001053367881220235421809751254540594752243"+
                                        "52584907711670556013604839586446706324415722155397"+
                                        "53697817977846174064955149290862569321978468622482"+
                                        "83972241375657056057490261407972968652414535100474"+
                                        "82166370484403199890008895243450658541227588666881"+
                                        "16427171479924442928230863465674813919123162824586"+
                                        "17866458359124566529476545682848912883142607690042"+
                                        "24219022671055626321111109370544217506941658960408"+
                                        "07198403850962455444362981230987879927244284909188"+
                                        "84580156166097919133875499200524063689912560717606"+
                                        "05886116467109405077541002256983155200055935729725"+
                                        "71636269561882670428252483600823257530420752963450");

        int[] nArr = new int[sArr.length()];

        for(int i=0; i<nArr.length; i++){
            nArr[i] = sArr.charAt(i)-'0';
        }
        return nArr;
    }

    // 숫자배을 순서대로 5개씩 곱해 결과배열에 넣기 (결과배열은 995개만 필요)
    static int[] makeResultAr(int[] nArr){
        int[] resultAr = new int[nArr.length-5];

        for(int i=0; i<nArr.length-5; i++){
            resultAr[i] = 1;
        }

        for(int i=0; i<nArr.length-5; i++){
            for(int j=i; j<i+5; j++){
                resultAr[i] *= nArr[j];
            }
            System.out.println("Num : " +resultAr[i]+ ", At : " +i);
        }



        return resultAr;
    }

    // 결과 배열에 있는 숫자들중 제일 큰수와 그 인덱스를 저장하기
    static void comparing(int[] resultAr){
        int biggest = resultAr[0];
        int index = 0;
        for(int i=1; i<resultAr.length; i++){
            if(resultAr[i]>biggest){
                biggest = resultAr[i];
                index = i;
            }
        }
        System.out.println("The Biggest Number is " + biggest + " at index of Array " + index);
    }
}
